{"ast":null,"code":"var _jsxFileName = \"/Users/lechuanwang/Documents/2021 spring/dsc106/project/dsc102/src/App.js\";\nimport Globe from 'react-globe.gl';\nimport { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport covidStats from './covidStats.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  var _s = $RefreshSig$();\n\n  const World = () => {\n    _s();\n\n    const globeEl = useRef();\n    const [covidData, setcovidData] = useState([]); // useEffect(() => {\n    //   // load data\n    //   fetch('/covidStats.json').then(res => res.text())\n    //     .then(csv => d3.csvParse(csv, ({ lat, lng, pop }) => ({ lat: +lat, lng: +lng, pop: +pop })))\n    //     .then(setcovidData);\n    // }, []);\n\n    useEffect(() => {\n      console.log(covidStats);\n    }, []);\n    useEffect(() => {\n      // Auto-rotate\n      globeEl.current.controls().autoRotate = true;\n      globeEl.current.controls().autoRotateSpeed = 0.1;\n    }, []);\n    const weightColor = d3.scaleSequentialSqrt(d3.interpolateYlOrRd).domain([0, 1e7]);\n    return /*#__PURE__*/_jsxDEV(Globe, {\n      ref: globeEl,\n      globeImageUrl: \"//unpkg.com/three-globe/example/img/earth-night.jpg\",\n      bumpImageUrl: \"//unpkg.com/three-globe/example/img/earth-topology.png\",\n      backgroundImageUrl: \"//unpkg.com/three-globe/example/img/night-sky.png\",\n      hexBinPointsData: covidData,\n      hexBinPointWeight: \"pop\",\n      hexAltitude: d => d.sumWeight * 6e-8,\n      hexBinResolution: 4,\n      hexTopColor: d => weightColor(d.sumWeight),\n      hexSideColor: d => weightColor(d.sumWeight),\n      hexBinMerge: true,\n      enablePointerInteraction: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this);\n  };\n\n  _s(World, \"betV9CYKrKJL5Fg+2maen9NhXN4=\");\n\n  return /*#__PURE__*/_jsxDEV(World, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lechuanwang/Documents/2021 spring/dsc106/project/dsc102/src/App.js"],"names":["Globe","useState","useEffect","useRef","d3","covidStats","App","World","globeEl","covidData","setcovidData","console","log","current","controls","autoRotate","autoRotateSpeed","weightColor","scaleSequentialSqrt","interpolateYlOrRd","domain","d","sumWeight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,UAAMC,OAAO,GAAGL,MAAM,EAAtB;AACA,UAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C,CAFkB,CAIlB;AACA;AACA;AACA;AACA;AACA;;AACAC,IAAAA,SAAS,CAAC,MAAM;AACdS,MAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AACD,KAFQ,EAEN,EAFM,CAAT;AAKAH,IAAAA,SAAS,CAAC,MAAM;AACd;AACAM,MAAAA,OAAO,CAACK,OAAR,CAAgBC,QAAhB,GAA2BC,UAA3B,GAAwC,IAAxC;AACAP,MAAAA,OAAO,CAACK,OAAR,CAAgBC,QAAhB,GAA2BE,eAA3B,GAA6C,GAA7C;AACD,KAJQ,EAIN,EAJM,CAAT;AAMA,UAAMC,WAAW,GAAGb,EAAE,CAACc,mBAAH,CAAuBd,EAAE,CAACe,iBAA1B,EACjBC,MADiB,CACV,CAAC,CAAD,EAAI,GAAJ,CADU,CAApB;AAEF,wBACE,QAAC,KAAD;AACE,MAAA,GAAG,EAAEZ,OADP;AAEE,MAAA,aAAa,EAAC,qDAFhB;AAGE,MAAA,YAAY,EAAC,wDAHf;AAIE,MAAA,kBAAkB,EAAC,mDAJrB;AAME,MAAA,gBAAgB,EAAEC,SANpB;AAOE,MAAA,iBAAiB,EAAC,KAPpB;AAQE,MAAA,WAAW,EAAEY,CAAC,IAAIA,CAAC,CAACC,SAAF,GAAc,IARlC;AASE,MAAA,gBAAgB,EAAE,CATpB;AAUE,MAAA,WAAW,EAAED,CAAC,IAAIJ,WAAW,CAACI,CAAC,CAACC,SAAH,CAV/B;AAWE,MAAA,YAAY,EAAED,CAAC,IAAIJ,WAAW,CAACI,CAAC,CAACC,SAAH,CAXhC;AAYE,MAAA,WAAW,EAAE,IAZf;AAaE,MAAA,wBAAwB,EAAE;AAb5B;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD,GAxCC;;AAFa,KAEPf,KAFO;;AA2Cb,sBACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;KA9CQD,G;AAgDT,eAAeA,GAAf","sourcesContent":["import Globe from 'react-globe.gl';\nimport { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport covidStats from './covidStats.json'\n\nfunction App() {\n\n  const World = () => {\n    const globeEl = useRef();\n    const [covidData, setcovidData] = useState([]);\n\n    // useEffect(() => {\n    //   // load data\n    //   fetch('/covidStats.json').then(res => res.text())\n    //     .then(csv => d3.csvParse(csv, ({ lat, lng, pop }) => ({ lat: +lat, lng: +lng, pop: +pop })))\n    //     .then(setcovidData);\n    // }, []);\n    useEffect(() => {\n      console.log(covidStats)\n    }, []);\n\n\n    useEffect(() => {\n      // Auto-rotate\n      globeEl.current.controls().autoRotate = true;\n      globeEl.current.controls().autoRotateSpeed = 0.1;\n    }, []);\n\n    const weightColor = d3.scaleSequentialSqrt(d3.interpolateYlOrRd)\n      .domain([0, 1e7]);\n  return (\n    <Globe\n      ref={globeEl}\n      globeImageUrl=\"//unpkg.com/three-globe/example/img/earth-night.jpg\"\n      bumpImageUrl=\"//unpkg.com/three-globe/example/img/earth-topology.png\"\n      backgroundImageUrl=\"//unpkg.com/three-globe/example/img/night-sky.png\"\n\n      hexBinPointsData={covidData}\n      hexBinPointWeight=\"pop\"\n      hexAltitude={d => d.sumWeight * 6e-8}\n      hexBinResolution={4}\n      hexTopColor={d => weightColor(d.sumWeight)}\n      hexSideColor={d => weightColor(d.sumWeight)}\n      hexBinMerge={true}\n      enablePointerInteraction={false}\n    />\n  );\n}\n  return (\n    <World />\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
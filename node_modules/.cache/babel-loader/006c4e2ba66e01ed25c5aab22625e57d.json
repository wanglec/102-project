{"ast":null,"code":"var _jsxFileName = \"/Users/lechuanwang/Documents/2021 spring/dsc106/project/dsc102/src/App.js\";\nimport Globe from 'react-globe.gl';\nimport { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport covidStats from './covidStats.json';\nimport geodata from './data.geojson';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  var _s = $RefreshSig$();\n\n  const World = () => {\n    _s();\n\n    const globeEl = useRef(); // const [covidData, setcovidData] = useState([]);\n\n    const [countries, setCountries] = useState({\n      features: []\n    });\n    useEffect(() => {\n      // load data\n      const functionCall = ({\n        geodata\n      }) => {\n        setCountries(countries);\n      };\n\n      functionCall();\n    }, []);\n    useEffect(() => {\n      // Auto-rotate\n      globeEl.current.controls().autoRotate = true;\n      globeEl.current.controls().autoRotateSpeed = 0.1;\n    }, []);\n    return /*#__PURE__*/_jsxDEV(Globe, {\n      ref: globeEl,\n      globeImageUrl: \"//unpkg.com/three-globe/example/img/earth-night.jpg\",\n      bumpImageUrl: \"//unpkg.com/three-globe/example/img/earth-topology.png\",\n      backgroundImageUrl: \"//unpkg.com/three-globe/example/img/night-sky.png\",\n      polygonsData: countries.features.filter(d => d.properties.ISO_A2 !== 'AQ'),\n      polygonCapColor: () => 'rgba(200, 0, 0, 0.6)',\n      polygonSideColor: () => 'rgba(0, 100, 0, 0.15)'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this);\n  };\n\n  _s(World, \"leU99PTiXJ9cASU61irVHWTAMMA=\");\n\n  return /*#__PURE__*/_jsxDEV(World, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lechuanwang/Documents/2021 spring/dsc106/project/dsc102/src/App.js"],"names":["Globe","useState","useEffect","useRef","d3","covidStats","geodata","App","World","globeEl","countries","setCountries","features","functionCall","current","controls","autoRotate","autoRotateSpeed","filter","d","properties","ISO_A2"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,OAAP,MAAoB,gBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,UAAMC,OAAO,GAAGN,MAAM,EAAtB,CADkB,CAElB;;AACA,UAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC;AAAEW,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAA1C;AAEAV,IAAAA,SAAS,CAAC,MAAM;AACd;AACA,YAAMW,YAAY,GAAG,CAAC;AAACP,QAAAA;AAAD,OAAD,KAAe;AAChCK,QAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,OAFH;;AAGEG,MAAAA,YAAY;AACf,KANQ,EAMN,EANM,CAAT;AASAX,IAAAA,SAAS,CAAC,MAAM;AACd;AACAO,MAAAA,OAAO,CAACK,OAAR,CAAgBC,QAAhB,GAA2BC,UAA3B,GAAwC,IAAxC;AACAP,MAAAA,OAAO,CAACK,OAAR,CAAgBC,QAAhB,GAA2BE,eAA3B,GAA6C,GAA7C;AACD,KAJQ,EAIN,EAJM,CAAT;AAMF,wBACE,QAAC,KAAD;AACE,MAAA,GAAG,EAAER,OADP;AAEE,MAAA,aAAa,EAAC,qDAFhB;AAGE,MAAA,YAAY,EAAC,wDAHf;AAIE,MAAA,kBAAkB,EAAC,mDAJrB;AAME,MAAA,YAAY,EAAEC,SAAS,CAACE,QAAV,CAAmBM,MAAnB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,UAAF,CAAaC,MAAb,KAAwB,IAAvD,CANhB;AAOE,MAAA,eAAe,EAAE,MAAM,sBAPzB;AAQE,MAAA,gBAAgB,EAAE,MAAM;AAR1B;AAAA;AAAA;AAAA;AAAA,YADF;AAYD,GAhCC;;AAFa,KAEPb,KAFO;;AAmCb,sBACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;KAtCQD,G;AAwCT,eAAeA,GAAf","sourcesContent":["import Globe from 'react-globe.gl';\nimport { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport covidStats from './covidStats.json'\nimport geodata from './data.geojson'\n\nfunction App() {\n\n  const World = () => {\n    const globeEl = useRef();\n    // const [covidData, setcovidData] = useState([]);\n    const [countries, setCountries] = useState({ features: []});\n\n    useEffect(() => {\n      // load data\n      const functionCall = ({geodata}) => {\n          setCountries(countries);\n        };\n        functionCall();\n    }, []);\n\n\n    useEffect(() => {\n      // Auto-rotate\n      globeEl.current.controls().autoRotate = true;\n      globeEl.current.controls().autoRotateSpeed = 0.1;\n    }, []);\n\n  return (\n    <Globe\n      ref={globeEl}\n      globeImageUrl=\"//unpkg.com/three-globe/example/img/earth-night.jpg\"\n      bumpImageUrl=\"//unpkg.com/three-globe/example/img/earth-topology.png\"\n      backgroundImageUrl=\"//unpkg.com/three-globe/example/img/night-sky.png\"\n\n      polygonsData={countries.features.filter(d => d.properties.ISO_A2 !== 'AQ')}\n      polygonCapColor={() => 'rgba(200, 0, 0, 0.6)'}\n      polygonSideColor={() => 'rgba(0, 100, 0, 0.15)'}\n    />\n  );\n}\n  return (\n    <World />\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
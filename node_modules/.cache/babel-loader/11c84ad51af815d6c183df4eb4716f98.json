{"ast":null,"code":"var _jsxFileName = \"/Users/lechuanwang/Documents/2021 spring/dsc106/project/dsc102/102-project/src/App.js\";\nimport Globe from 'react-globe.gl';\nimport { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport covidStats from './covidStats.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar cors = require('cors');\n\nfunction App() {\n  var _s = $RefreshSig$();\n\n  const World = () => {\n    _s();\n\n    const globeEl = useRef();\n    const [popData, setPopData] = useState([]);\n    useEffect(() => {\n      // load data\n      fetch('../datasets/world_population.csv').then(res => res.text()).then(csv => d3.csvParse(csv, ({\n        lat,\n        lng,\n        pop\n      }) => ({\n        lat: +lat,\n        lng: +lng,\n        pop: +pop\n      }))).then(setPopData);\n      console.log(popData);\n    }, [popData]);\n    useEffect(() => {\n      // Auto-rotate\n      globeEl.current.controls().autoRotate = true;\n      globeEl.current.controls().autoRotateSpeed = 0.1;\n    }, []);\n    const weightColor = d3.scaleSequentialSqrt(d3.interpolateYlOrRd).domain([0, 1e7]);\n    return /*#__PURE__*/_jsxDEV(Globe, {\n      ref: globeEl,\n      globeImageUrl: \"//unpkg.com/three-globe/example/img/earth-night.jpg\",\n      bumpImageUrl: \"//unpkg.com/three-globe/example/img/earth-topology.png\",\n      backgroundImageUrl: \"//unpkg.com/three-globe/example/img/night-sky.png\",\n      hexBinPointsData: popData,\n      hexBinPointWeight: \"pop\",\n      hexAltitude: d => d.sumWeight * 6e-8,\n      hexBinResolution: 4,\n      hexTopColor: d => weightColor(d.sumWeight),\n      hexSideColor: d => weightColor(d.sumWeight),\n      hexBinMerge: true,\n      enablePointerInteraction: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }, this);\n  };\n\n  _s(World, \"zJ6G487iFYfY9CMuLCXNlEeNNIE=\");\n\n  return /*#__PURE__*/_jsxDEV(World, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lechuanwang/Documents/2021 spring/dsc106/project/dsc102/102-project/src/App.js"],"names":["Globe","useState","useEffect","useRef","d3","covidStats","cors","require","App","World","globeEl","popData","setPopData","fetch","then","res","text","csv","csvParse","lat","lng","pop","console","log","current","controls","autoRotate","autoRotateSpeed","weightColor","scaleSequentialSqrt","interpolateYlOrRd","domain","d","sumWeight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;;AACA,IAAIC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,KAAK,GAAG,MAAM;AAAA;;AACpB,UAAMC,OAAO,GAAGP,MAAM,EAAtB;AACA,UAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AAEAC,IAAAA,SAAS,CAAC,MAAM;AACd;AACAW,MAAAA,KAAK,CAAC,kCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,GAAG,IAAIb,EAAE,CAACc,QAAH,CAAYD,GAAZ,EAAiB,CAAC;AAAEE,QAAAA,GAAF;AAAOC,QAAAA,GAAP;AAAYC,QAAAA;AAAZ,OAAD,MAAwB;AAAEF,QAAAA,GAAG,EAAE,CAACA,GAAR;AAAaC,QAAAA,GAAG,EAAE,CAACA,GAAnB;AAAwBC,QAAAA,GAAG,EAAE,CAACA;AAA9B,OAAxB,CAAjB,CAFf,EAGGP,IAHH,CAGQF,UAHR;AAIAU,MAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACD,KAPQ,EAON,CAACA,OAAD,CAPM,CAAT;AASAT,IAAAA,SAAS,CAAC,MAAM;AACd;AACAQ,MAAAA,OAAO,CAACc,OAAR,CAAgBC,QAAhB,GAA2BC,UAA3B,GAAwC,IAAxC;AACAhB,MAAAA,OAAO,CAACc,OAAR,CAAgBC,QAAhB,GAA2BE,eAA3B,GAA6C,GAA7C;AACD,KAJQ,EAIN,EAJM,CAAT;AAMA,UAAMC,WAAW,GAAGxB,EAAE,CAACyB,mBAAH,CAAuBzB,EAAE,CAAC0B,iBAA1B,EACjBC,MADiB,CACV,CAAC,CAAD,EAAI,GAAJ,CADU,CAApB;AAGA,wBAAO,QAAC,KAAD;AACL,MAAA,GAAG,EAAErB,OADA;AAEL,MAAA,aAAa,EAAC,qDAFT;AAGL,MAAA,YAAY,EAAC,wDAHR;AAIL,MAAA,kBAAkB,EAAC,mDAJd;AAML,MAAA,gBAAgB,EAAEC,OANb;AAOL,MAAA,iBAAiB,EAAC,KAPb;AAQL,MAAA,WAAW,EAAEqB,CAAC,IAAIA,CAAC,CAACC,SAAF,GAAc,IAR3B;AASL,MAAA,gBAAgB,EAAE,CATb;AAUL,MAAA,WAAW,EAAED,CAAC,IAAIJ,WAAW,CAACI,CAAC,CAACC,SAAH,CAVxB;AAWL,MAAA,YAAY,EAAED,CAAC,IAAIJ,WAAW,CAACI,CAAC,CAACC,SAAH,CAXzB;AAYL,MAAA,WAAW,EAAE,IAZR;AAaL,MAAA,wBAAwB,EAAE;AAbrB;AAAA;AAAA;AAAA;AAAA,YAAP;AAeC,GArCD;;AAFa,KAEPxB,KAFO;;AAyCb,sBACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;KA5CQD,G;AA8CT,eAAeA,GAAf","sourcesContent":["import Globe from 'react-globe.gl';\nimport { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport covidStats from './covidStats.json'\nvar cors = require('cors')\n\nfunction App() {\n\n  const World = () => {\n  const globeEl = useRef();\n  const [popData, setPopData] = useState([]);\n\n  useEffect(() => {\n    // load data\n    fetch('../datasets/world_population.csv')\n      .then(res => res.text())\n      .then(csv => d3.csvParse(csv, ({ lat, lng, pop }) => ({ lat: +lat, lng: +lng, pop: +pop })))\n      .then(setPopData);\n    console.log(popData)\n  }, [popData]);\n\n  useEffect(() => {\n    // Auto-rotate\n    globeEl.current.controls().autoRotate = true;\n    globeEl.current.controls().autoRotateSpeed = 0.1;\n  }, []);\n\n  const weightColor = d3.scaleSequentialSqrt(d3.interpolateYlOrRd)\n    .domain([0, 1e7]);\n\n  return <Globe\n    ref={globeEl}\n    globeImageUrl=\"//unpkg.com/three-globe/example/img/earth-night.jpg\"\n    bumpImageUrl=\"//unpkg.com/three-globe/example/img/earth-topology.png\"\n    backgroundImageUrl=\"//unpkg.com/three-globe/example/img/night-sky.png\"\n\n    hexBinPointsData={popData}\n    hexBinPointWeight=\"pop\"\n    hexAltitude={d => d.sumWeight * 6e-8}\n    hexBinResolution={4}\n    hexTopColor={d => weightColor(d.sumWeight)}\n    hexSideColor={d => weightColor(d.sumWeight)}\n    hexBinMerge={true}\n    enablePointerInteraction={false}\n  />;\n  };\n\n  return (\n    <World />\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
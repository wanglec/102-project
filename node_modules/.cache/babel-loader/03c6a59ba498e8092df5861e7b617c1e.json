{"ast":null,"code":"var _jsxFileName = \"/Users/lechuanwang/Documents/2021 spring/dsc106/project/dsc102/102-project/src/GraphAll.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef, useMemo, React } from 'react';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\nimport moment from 'moment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GraphAll() {\n  _s();\n\n  const [country, setCountry] = useState('None');\n  const chinaInfec = [{\n    'date': '20200122',\n    'count': 548\n  }, {\n    'date': '20200129',\n    'count': 6087\n  }, {\n    'date': '20200205',\n    'count': 27440\n  }, {\n    'date': '20200212',\n    'count': 44759\n  }, {\n    'date': '20200219',\n    'count': 74619\n  }, {\n    'date': '20200226',\n    'count': 78166\n  }, {\n    'date': '20200304',\n    'count': 80386\n  }, {\n    'date': '20200311',\n    'count': 80921\n  }, {\n    'date': '20200318',\n    'count': 81102\n  }, {\n    'date': '20200325',\n    'count': 81661\n  }, {\n    'date': '20200401',\n    'count': 82361\n  }, {\n    'date': '20200408',\n    'count': 82809\n  }, {\n    'date': '20200415',\n    'count': 83356\n  }, {\n    'date': '20200422',\n    'count': 83868\n  }, {\n    'date': '20200429',\n    'count': 83944\n  }, {\n    'date': '20200506',\n    'count': 83970\n  }, {\n    'date': '20200513',\n    'count': 84024\n  }, {\n    'date': '20200520',\n    'count': 84063\n  }, {\n    'date': '20200527',\n    'count': 84106\n  }, {\n    'date': '20200603',\n    'count': 84160\n  }, {\n    'date': '20200610',\n    'count': 84209\n  }, {\n    'date': '20200617',\n    'count': 84458\n  }, {\n    'date': '20200624',\n    'count': 84673\n  }, {\n    'date': '20200701',\n    'count': 84816\n  }, {\n    'date': '20200708',\n    'count': 84950\n  }, {\n    'date': '20200715',\n    'count': 85246\n  }, {\n    'date': '20200722',\n    'count': 85906\n  }, {\n    'date': '20200729',\n    'count': 87213\n  }, {\n    'date': '20200805',\n    'count': 88328\n  }, {\n    'date': '20200812',\n    'count': 89045\n  }, {\n    'date': '20200819',\n    'count': 89527\n  }, {\n    'date': '20200826',\n    'count': 89784\n  }, {\n    'date': '20200902',\n    'count': 89953\n  }, {\n    'date': '20200909',\n    'count': 90100\n  }, {\n    'date': '20200916',\n    'count': 90253\n  }, {\n    'date': '20200923',\n    'count': 90409\n  }, {\n    'date': '20200930',\n    'count': 90545\n  }, {\n    'date': '20201007',\n    'count': 90687\n  }, {\n    'date': '20201014',\n    'count': 90869\n  }, {\n    'date': '20201021',\n    'count': 91044\n  }, {\n    'date': '20201028',\n    'count': 91271\n  }, {\n    'date': '20201104',\n    'count': 91509\n  }, {\n    'date': '20201111',\n    'count': 91752\n  }, {\n    'date': '20201118',\n    'count': 91906\n  }, {\n    'date': '20201125',\n    'count': 92402\n  }, {\n    'date': '20201202',\n    'count': 93113\n  }, {\n    'date': '20201209',\n    'count': 93898\n  }, {\n    'date': '20201216',\n    'count': 94626\n  }, {\n    'date': '20201223',\n    'count': 95298\n  }, {\n    'date': '20201230',\n    'count': 95876\n  }, {\n    'date': '20210106',\n    'count': 96398\n  }, {\n    'date': '20210113',\n    'count': 97275\n  }, {\n    'date': '20210120',\n    'count': 98544\n  }, {\n    'date': '20210127',\n    'count': 99655\n  }, {\n    'date': '20210203',\n    'count': 100226\n  }, {\n    'date': '20210210',\n    'count': 100494\n  }, {\n    'date': '20210217',\n    'count': 100666\n  }, {\n    'date': '20210224',\n    'count': 100832\n  }, {\n    'date': '20210303',\n    'count': 101037\n  }, {\n    'date': '20210310',\n    'count': 101194\n  }, {\n    'date': '20210317',\n    'count': 101460\n  }, {\n    'date': '20210324',\n    'count': 101603\n  }, {\n    'date': '20210331',\n    'count': 101732\n  }, {\n    'date': '20210407',\n    'count': 101953\n  }, {\n    'date': '20210414',\n    'count': 102118\n  }, {\n    'date': '20210421',\n    'count': 102300\n  }, {\n    'date': '20210428',\n    'count': 102446\n  }, {\n    'date': '20210505',\n    'count': 102571\n  }];\n\n  const handleChange = e => {\n    setCountry(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Here we want to elaborate the time series data of the top five countries with most vaccinations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"select a country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: country,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: 'China',\n          children: \"China\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: 'US',\n          children: \"US\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: 'India',\n          children: \"India\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 1400,\n      height: 400,\n      data: chinaInfec,\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"date\",\n        domain: ['auto', 'auto'],\n        tickFormatter: unixTime => moment(unixTime).format('YYYY/MM/DD'),\n        type: \"category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"count\",\n        stroke: \"#ff0000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GraphAll, \"88D2pd0/h1LI4YXN5yp2EXzdcTI=\");\n\n_c = GraphAll;\nexport default GraphAll;\n\nvar _c;\n\n$RefreshReg$(_c, \"GraphAll\");","map":{"version":3,"sources":["/Users/lechuanwang/Documents/2021 spring/dsc106/project/dsc102/102-project/src/GraphAll.js"],"names":["useState","useEffect","useRef","useMemo","React","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","Legend","moment","InputLabel","MenuItem","FormHelperText","FormControl","Select","Typography","GraphAll","country","setCountry","chinaInfec","handleChange","e","target","value","unixTime","format"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef, useMemo, React } from 'react';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\nimport moment from 'moment'\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { Typography } from '@material-ui/core';\n\n\nfunction GraphAll() {\n    const [country, setCountry] = useState('None');\n\n    const chinaInfec = [{'date': '20200122', 'count': 548},\n    {'date': '20200129', 'count': 6087},\n    {'date': '20200205', 'count': 27440},\n    {'date': '20200212', 'count': 44759},\n    {'date': '20200219', 'count': 74619},\n    {'date': '20200226', 'count': 78166},\n    {'date': '20200304', 'count': 80386},\n    {'date': '20200311', 'count': 80921},\n    {'date': '20200318', 'count': 81102},\n    {'date': '20200325', 'count': 81661},\n    {'date': '20200401', 'count': 82361},\n    {'date': '20200408', 'count': 82809},\n    {'date': '20200415', 'count': 83356},\n    {'date': '20200422', 'count': 83868},\n    {'date': '20200429', 'count': 83944},\n    {'date': '20200506', 'count': 83970},\n    {'date': '20200513', 'count': 84024},\n    {'date': '20200520', 'count': 84063},\n    {'date': '20200527', 'count': 84106},\n    {'date': '20200603', 'count': 84160},\n    {'date': '20200610', 'count': 84209},\n    {'date': '20200617', 'count': 84458},\n    {'date': '20200624', 'count': 84673},\n    {'date': '20200701', 'count': 84816},\n    {'date': '20200708', 'count': 84950},\n    {'date': '20200715', 'count': 85246},\n    {'date': '20200722', 'count': 85906},\n    {'date': '20200729', 'count': 87213},\n    {'date': '20200805', 'count': 88328},\n    {'date': '20200812', 'count': 89045},\n    {'date': '20200819', 'count': 89527},\n    {'date': '20200826', 'count': 89784},\n    {'date': '20200902', 'count': 89953},\n    {'date': '20200909', 'count': 90100},\n    {'date': '20200916', 'count': 90253},\n    {'date': '20200923', 'count': 90409},\n    {'date': '20200930', 'count': 90545},\n    {'date': '20201007', 'count': 90687},\n    {'date': '20201014', 'count': 90869},\n    {'date': '20201021', 'count': 91044},\n    {'date': '20201028', 'count': 91271},\n    {'date': '20201104', 'count': 91509},\n    {'date': '20201111', 'count': 91752},\n    {'date': '20201118', 'count': 91906},\n    {'date': '20201125', 'count': 92402},\n    {'date': '20201202', 'count': 93113},\n    {'date': '20201209', 'count': 93898},\n    {'date': '20201216', 'count': 94626},\n    {'date': '20201223', 'count': 95298},\n    {'date': '20201230', 'count': 95876},\n    {'date': '20210106', 'count': 96398},\n    {'date': '20210113', 'count': 97275},\n    {'date': '20210120', 'count': 98544},\n    {'date': '20210127', 'count': 99655},\n    {'date': '20210203', 'count': 100226},\n    {'date': '20210210', 'count': 100494},\n    {'date': '20210217', 'count': 100666},\n    {'date': '20210224', 'count': 100832},\n    {'date': '20210303', 'count': 101037},\n    {'date': '20210310', 'count': 101194},\n    {'date': '20210317', 'count': 101460},\n    {'date': '20210324', 'count': 101603},\n    {'date': '20210331', 'count': 101732},\n    {'date': '20210407', 'count': 101953},\n    {'date': '20210414', 'count': 102118},\n    {'date': '20210421', 'count': 102300},\n    {'date': '20210428', 'count': 102446},\n    {'date': '20210505', 'count': 102571}];   \n\n    const handleChange = (e) => {\n        setCountry(e.target.value);\n    };\n\n    return (\n    <div>\n        <Typography variant=\"h5\" >\n            Here we want to elaborate the time series data of the top five countries with most vaccinations\n        </Typography>\n        <div>\n            <InputLabel>select a country</InputLabel>\n            <Select\n            value={country}\n            onChange={handleChange}\n            >\n            <MenuItem value={'China'}>China</MenuItem>\n            <MenuItem value={'US'}>US</MenuItem>\n            <MenuItem value={'India'}>India</MenuItem>\n            </Select>\n        </div>\n        <LineChart width={1400} height={400} data={chinaInfec}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis \n                dataKey=\"date\" \n                domain = {['auto', 'auto']} \n                tickFormatter = {(unixTime) => moment(unixTime).format('YYYY/MM/DD')} \n                type = 'category'/>\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"count\" stroke=\"#ff0000\" />\n        </LineChart>\n    </div>\n    )\n}\n\nexport default GraphAll;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/lechuanwang/Documents/2021 spring/dsc106/project/dsc102/102-project/src/App.js\";\nimport Globe from 'react-globe.gl';\nimport { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport covidStats from './covidStats.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar cors = require('cors');\n\nfunction App() {\n  var _s = $RefreshSig$();\n\n  const World = () => {\n    _s();\n\n    const [equakes, setEquakes] = useState([]);\n    useEffect(() => {\n      // load data\n      fetch('//earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_month.geojson').then(res => res.json()).then(({\n        features\n      }) => setEquakes(features));\n    }, []);\n    const weightColor = d3.scaleLinear().domain([0, 30]).range(['lightblue', 'darkred']).clamp(true);\n    return /*#__PURE__*/_jsxDEV(Globe, {\n      globeImageUrl: \"//unpkg.com/three-globe/example/img/earth-night.jpg\",\n      hexBinPointsData: equakes,\n      hexBinPointLat: d => d.geometry.coordinates[1],\n      hexBinPointLng: d => d.geometry.coordinates[0],\n      hexBinPointWeight: d => d.properties.mag,\n      hexAltitude: ({\n        sumWeight\n      }) => sumWeight * 0.0025,\n      hexTopColor: d => weightColor(d.sumWeight),\n      hexSideColor: d => weightColor(d.sumWeight),\n      hexLabel: d => `\n          <b>${d.points.length}</b> earthquakes in the past month:<ul><li>\n            ${d.points.slice().sort((a, b) => b.properties.mag - a.properties.mag).map(d => d.properties.title).join('</li><li>')}\n          </li></ul>\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(World, \"cW9fTrup9HS+8h+PU77/wPJ49oc=\");\n\n  return /*#__PURE__*/_jsxDEV(World, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lechuanwang/Documents/2021 spring/dsc106/project/dsc102/102-project/src/App.js"],"names":["Globe","useState","useEffect","useRef","d3","covidStats","cors","require","App","World","equakes","setEquakes","fetch","then","res","json","features","weightColor","scaleLinear","domain","range","clamp","d","geometry","coordinates","properties","mag","sumWeight","points","length","slice","sort","a","b","map","title","join"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;;AACA,IAAIC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAlB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,UAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AAEAC,IAAAA,SAAS,CAAC,MAAM;AACd;AACAU,MAAAA,KAAK,CAAC,uEAAD,CAAL,CAA+EC,IAA/E,CAAoFC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA3F,EACGF,IADH,CACQ,CAAC;AAAEG,QAAAA;AAAF,OAAD,KAAkBL,UAAU,CAACK,QAAD,CADpC;AAED,KAJQ,EAIN,EAJM,CAAT;AAMA,UAAMC,WAAW,GAAGb,EAAE,CAACc,WAAH,GACjBC,MADiB,CACV,CAAC,CAAD,EAAI,EAAJ,CADU,EAEjBC,KAFiB,CAEX,CAAC,WAAD,EAAc,SAAd,CAFW,EAGjBC,KAHiB,CAGX,IAHW,CAApB;AAKA,wBACE,QAAC,KAAD;AACE,MAAA,aAAa,EAAC,qDADhB;AAEE,MAAA,gBAAgB,EAAEX,OAFpB;AAGE,MAAA,cAAc,EAAEY,CAAC,IAAIA,CAAC,CAACC,QAAF,CAAWC,WAAX,CAAuB,CAAvB,CAHvB;AAIE,MAAA,cAAc,EAAEF,CAAC,IAAIA,CAAC,CAACC,QAAF,CAAWC,WAAX,CAAuB,CAAvB,CAJvB;AAKE,MAAA,iBAAiB,EAAEF,CAAC,IAAIA,CAAC,CAACG,UAAF,CAAaC,GALvC;AAME,MAAA,WAAW,EAAE,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAmBA,SAAS,GAAG,MAN9C;AAOE,MAAA,WAAW,EAAEL,CAAC,IAAIL,WAAW,CAACK,CAAC,CAACK,SAAH,CAP/B;AAQE,MAAA,YAAY,EAAEL,CAAC,IAAIL,WAAW,CAACK,CAAC,CAACK,SAAH,CARhC;AASE,MAAA,QAAQ,EAAEL,CAAC,IAAK;AACxB,eAAeA,CAAC,CAACM,MAAF,CAASC,MAAO;AAC/B,cAAcP,CAAC,CAACM,MAAF,CAASE,KAAT,GAAiBC,IAAjB,CAAsB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACR,UAAF,CAAaC,GAAb,GAAmBM,CAAC,CAACP,UAAF,CAAaC,GAAhE,EAAqEQ,GAArE,CAAyEZ,CAAC,IAAIA,CAAC,CAACG,UAAF,CAAaU,KAA3F,EAAkGC,IAAlG,CAAuG,WAAvG,CAAoH;AAClI;AACA;AAbM;AAAA;AAAA;AAAA;AAAA,YADF;AAiBC,GA/BH;;AAFa,KAEP3B,KAFO;;AAmCb,sBACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;KAtCQD,G;AAwCT,eAAeA,GAAf","sourcesContent":["import Globe from 'react-globe.gl';\nimport { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport covidStats from './covidStats.json'\nvar cors = require('cors')\n\nfunction App() {\n\n  const World = () => {\n    const [equakes, setEquakes] = useState([]);\n\n    useEffect(() => {\n      // load data\n      fetch('//earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_month.geojson').then(res => res.json())\n        .then(({ features }) => setEquakes(features));\n    }, []);\n\n    const weightColor = d3.scaleLinear()\n      .domain([0, 30])\n      .range(['lightblue', 'darkred'])\n      .clamp(true);\n\n    return (\n      <Globe\n        globeImageUrl=\"//unpkg.com/three-globe/example/img/earth-night.jpg\"\n        hexBinPointsData={equakes}\n        hexBinPointLat={d => d.geometry.coordinates[1]}\n        hexBinPointLng={d => d.geometry.coordinates[0]}\n        hexBinPointWeight={d => d.properties.mag}\n        hexAltitude={({ sumWeight }) => sumWeight * 0.0025}\n        hexTopColor={d => weightColor(d.sumWeight)}\n        hexSideColor={d => weightColor(d.sumWeight)}\n        hexLabel={d => `\n          <b>${d.points.length}</b> earthquakes in the past month:<ul><li>\n            ${d.points.slice().sort((a, b) => b.properties.mag - a.properties.mag).map(d => d.properties.title).join('</li><li>')}\n          </li></ul>\n        `}\n      />\n    );\n    };\n\n  return (\n    <World />\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/lechuanwang/Documents/2021 spring/dsc106/project/dsc102/src/App.js\";\nimport Globe from 'react-globe.gl';\nimport { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport covidStats from './covidStats.json';\nimport world_population from './datasets/world_population.csv';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  var _s = $RefreshSig$();\n\n  const World = () => {\n    _s();\n\n    //   const globeEl = useRef();\n    //   const N = 300;\n    //   const gData = [...Array(N).keys()].map(() => ({\n    //     lat: (Math.random() - 0.5) * 180,\n    //     lng: (Math.random() - 0.5) * 360,\n    //     size: Math.random() / 3,\n    //     color: ['red', 'white', 'blue', 'green'][Math.round(Math.random() * 3)]\n    //   }));\n    //   console.log(gData)\n    //   useEffect(() => {\n    //     // Auto-rotate\n    //     globeEl.current.controls().autoRotate = true;\n    //     globeEl.current.controls().autoRotateSpeed = 0.1;\n    //   }, []);\n    // return (\n    //   <Globe\n    //     ref={globeEl}\n    //     globeImageUrl=\"//unpkg.com/three-globe/example/img/earth-night.jpg\"\n    //     bumpImageUrl=\"//unpkg.com/three-globe/example/img/earth-topology.png\"\n    //     backgroundImageUrl=\"//unpkg.com/three-globe/example/img/night-sky.png\"\n    //     pointsData={gData}\n    //     pointAltitude=\"size\"\n    //     pointColor=\"color\"\n    //   />\n    // )\n    // };\n    const globeEl = useRef();\n    const [popData, setPopData] = useState([]);\n    useEffect(() => {\n      // load data\n      d3.csv(world_population).then(function (csv) {\n        d3.csvParse(csv, ({\n          lat,\n          lng,\n          pop\n        }) => ({\n          lat: +lat,\n          lng: +lng,\n          pop: +pop\n        }));\n      }).then(setPopData);\n    }, []);\n    useEffect(() => {\n      // Auto-rotate\n      globeEl.current.controls().autoRotate = true;\n      globeEl.current.controls().autoRotateSpeed = 0.1;\n    }, []);\n    const weightColor = d3.scaleSequentialSqrt(d3.interpolateYlOrRd).domain([0, 1e7]);\n    return /*#__PURE__*/_jsxDEV(Globe, {\n      ref: globeEl,\n      globeImageUrl: \"//unpkg.com/three-globe/example/img/earth-night.jpg\",\n      bumpImageUrl: \"//unpkg.com/three-globe/example/img/earth-topology.png\",\n      backgroundImageUrl: \"//unpkg.com/three-globe/example/img/night-sky.png\",\n      hexBinPointsData: popData,\n      hexBinPointWeight: \"pop\",\n      hexAltitude: d => d.sumWeight * 6e-8,\n      hexBinResolution: 4,\n      hexTopColor: d => weightColor(d.sumWeight),\n      hexSideColor: d => weightColor(d.sumWeight),\n      hexBinMerge: true,\n      enablePointerInteraction: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }, this);\n  };\n\n  _s(World, \"zJ6G487iFYfY9CMuLCXNlEeNNIE=\");\n\n  return /*#__PURE__*/_jsxDEV(World, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lechuanwang/Documents/2021 spring/dsc106/project/dsc102/src/App.js"],"names":["Globe","useState","useEffect","useRef","d3","covidStats","world_population","App","World","globeEl","popData","setPopData","csv","then","csvParse","lat","lng","pop","current","controls","autoRotate","autoRotateSpeed","weightColor","scaleSequentialSqrt","interpolateYlOrRd","domain","d","sumWeight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,KAAK,GAAG,MAAM;AAAA;;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,UAAMC,OAAO,GAAGN,MAAM,EAAtB;AACA,UAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AAEAC,IAAAA,SAAS,CAAC,MAAM;AACd;AACAE,MAAAA,EAAE,CAACQ,GAAH,CAAON,gBAAP,EACGO,IADH,CACQ,UAASD,GAAT,EAAc;AAClBR,QAAAA,EAAE,CAACU,QAAH,CAAYF,GAAZ,EAAiB,CAAC;AAAEG,UAAAA,GAAF;AAAOC,UAAAA,GAAP;AAAYC,UAAAA;AAAZ,SAAD,MAAwB;AAAEF,UAAAA,GAAG,EAAE,CAACA,GAAR;AAAaC,UAAAA,GAAG,EAAE,CAACA,GAAnB;AAAwBC,UAAAA,GAAG,EAAE,CAACA;AAA9B,SAAxB,CAAjB;AAA+E,OAFnF,EAGGJ,IAHH,CAGQF,UAHR;AAID,KANQ,EAMN,EANM,CAAT;AAQAT,IAAAA,SAAS,CAAC,MAAM;AACd;AACAO,MAAAA,OAAO,CAACS,OAAR,CAAgBC,QAAhB,GAA2BC,UAA3B,GAAwC,IAAxC;AACAX,MAAAA,OAAO,CAACS,OAAR,CAAgBC,QAAhB,GAA2BE,eAA3B,GAA6C,GAA7C;AACD,KAJQ,EAIN,EAJM,CAAT;AAMA,UAAMC,WAAW,GAAGlB,EAAE,CAACmB,mBAAH,CAAuBnB,EAAE,CAACoB,iBAA1B,EACjBC,MADiB,CACV,CAAC,CAAD,EAAI,GAAJ,CADU,CAApB;AAGA,wBAAO,QAAC,KAAD;AACL,MAAA,GAAG,EAAEhB,OADA;AAEL,MAAA,aAAa,EAAC,qDAFT;AAGL,MAAA,YAAY,EAAC,wDAHR;AAIL,MAAA,kBAAkB,EAAC,mDAJd;AAML,MAAA,gBAAgB,EAAEC,OANb;AAOL,MAAA,iBAAiB,EAAC,KAPb;AAQL,MAAA,WAAW,EAAEgB,CAAC,IAAIA,CAAC,CAACC,SAAF,GAAc,IAR3B;AASL,MAAA,gBAAgB,EAAE,CATb;AAUL,MAAA,WAAW,EAAED,CAAC,IAAIJ,WAAW,CAACI,CAAC,CAACC,SAAH,CAVxB;AAWL,MAAA,YAAY,EAAED,CAAC,IAAIJ,WAAW,CAACI,CAAC,CAACC,SAAH,CAXzB;AAYL,MAAA,WAAW,EAAE,IAZR;AAaL,MAAA,wBAAwB,EAAE;AAbrB;AAAA;AAAA;AAAA;AAAA,YAAP;AAeC,GAnED;;AAFa,KAEPnB,KAFO;;AAuEb,sBACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;KA1EQD,G;AA4ET,eAAeA,GAAf","sourcesContent":["import Globe from 'react-globe.gl';\nimport { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport covidStats from './covidStats.json'\nimport world_population from './datasets/world_population.csv'\n\nfunction App() {\n\n  const World = () => {\n  //   const globeEl = useRef();\n  //   const N = 300;\n  //   const gData = [...Array(N).keys()].map(() => ({\n  //     lat: (Math.random() - 0.5) * 180,\n  //     lng: (Math.random() - 0.5) * 360,\n  //     size: Math.random() / 3,\n  //     color: ['red', 'white', 'blue', 'green'][Math.round(Math.random() * 3)]\n  //   }));\n  //   console.log(gData)\n\n\n  //   useEffect(() => {\n  //     // Auto-rotate\n  //     globeEl.current.controls().autoRotate = true;\n  //     globeEl.current.controls().autoRotateSpeed = 0.1;\n  //   }, []);\n\n  // return (\n  //   <Globe\n  //     ref={globeEl}\n  //     globeImageUrl=\"//unpkg.com/three-globe/example/img/earth-night.jpg\"\n  //     bumpImageUrl=\"//unpkg.com/three-globe/example/img/earth-topology.png\"\n  //     backgroundImageUrl=\"//unpkg.com/three-globe/example/img/night-sky.png\"\n\n  //     pointsData={gData}\n  //     pointAltitude=\"size\"\n  //     pointColor=\"color\"\n  //   />\n  // )\n  // };\n\n  const globeEl = useRef();\n  const [popData, setPopData] = useState([]);\n\n  useEffect(() => {\n    // load data\n    d3.csv(world_population)\n      .then(function(csv) {\n        d3.csvParse(csv, ({ lat, lng, pop }) => ({ lat: +lat, lng: +lng, pop: +pop }))})\n      .then(setPopData);\n  }, []);\n\n  useEffect(() => {\n    // Auto-rotate\n    globeEl.current.controls().autoRotate = true;\n    globeEl.current.controls().autoRotateSpeed = 0.1;\n  }, []);\n\n  const weightColor = d3.scaleSequentialSqrt(d3.interpolateYlOrRd)\n    .domain([0, 1e7]);\n\n  return <Globe\n    ref={globeEl}\n    globeImageUrl=\"//unpkg.com/three-globe/example/img/earth-night.jpg\"\n    bumpImageUrl=\"//unpkg.com/three-globe/example/img/earth-topology.png\"\n    backgroundImageUrl=\"//unpkg.com/three-globe/example/img/night-sky.png\"\n\n    hexBinPointsData={popData}\n    hexBinPointWeight=\"pop\"\n    hexAltitude={d => d.sumWeight * 6e-8}\n    hexBinResolution={4}\n    hexTopColor={d => weightColor(d.sumWeight)}\n    hexSideColor={d => weightColor(d.sumWeight)}\n    hexBinMerge={true}\n    enablePointerInteraction={false}\n  />;\n  };\n\n  return (\n    <World />\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
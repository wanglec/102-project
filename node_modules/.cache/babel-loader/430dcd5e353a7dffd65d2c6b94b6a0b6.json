{"ast":null,"code":"import { asin, atan2, cos, sin, sqrt } from \"./math.js\";\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\nexport function cartesian(spherical) {\n  var lambda = spherical[0],\n      phi = spherical[1],\n      cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n} // TODO return a\n\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\nexport function cartesianAdd(a, b) {\n  return [a[0] + b[0], a[1] + b[1], a[2] + b[2]];\n}\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n} // TODO return d\n\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\nexport function cartesianNormalize(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  return [d[0] / l, d[1] / l, d[2] / l];\n}","map":{"version":3,"sources":["/Users/lechuanwang/Documents/2021 spring/dsc106/project/dsc102/102-project/node_modules/d3-geo-voronoi/src/cartesian.js"],"names":["asin","atan2","cos","sin","sqrt","spherical","cartesian","lambda","phi","cosPhi","cartesianDot","a","b","cartesianCross","cartesianAddInPlace","cartesianAdd","cartesianScale","vector","k","cartesianNormalizeInPlace","d","l","cartesianNormalize"],"mappings":"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","sourcesContent":["import { asin, atan2, cos, sin, sqrt } from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0],\n    phi = spherical[1],\n    cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [\n    a[1] * b[2] - a[2] * b[1],\n    a[2] * b[0] - a[0] * b[2],\n    a[0] * b[1] - a[1] * b[0]\n  ];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  (a[0] += b[0]), (a[1] += b[1]), (a[2] += b[2]);\n}\n\nexport function cartesianAdd(a, b) {\n  return [a[0] + b[0], a[1] + b[1], a[2] + b[2]];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  (d[0] /= l), (d[1] /= l), (d[2] /= l);\n}\n\nexport function cartesianNormalize(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  return [d[0] / l, d[1] / l, d[2] / l];\n}\n"]},"metadata":{},"sourceType":"module"}
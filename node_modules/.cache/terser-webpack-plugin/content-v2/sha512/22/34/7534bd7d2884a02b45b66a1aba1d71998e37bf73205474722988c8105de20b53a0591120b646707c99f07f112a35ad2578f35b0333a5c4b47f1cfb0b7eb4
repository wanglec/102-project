{"code":"(this[\"webpackJsonpmoz-todo-react\"]=this[\"webpackJsonpmoz-todo-react\"]||[]).push([[0],{428:function(t,e,n){\"use strict\";n.r(e);var o=n(1),c=n(97),a=n.n(c),r=n(47),i=n(22),u=n(228),l=n(445),s=n(135),y=n(443),j=n(227),b=n(226),f=n(83),p=n(80),h=n(229),d=n(25);var O=function(){var t=function(){var t=Object(o.useState)({features:[]}),e=Object(i.a)(t,2),n=e[0],c=e[1],a=Object(o.useState)(),l=Object(i.a)(a,2),y=l[0],j=l[1];Object(o.useEffect)((function(){fetch(\"./covid.geojson\").then((function(t){return t.json()})).then(c)}),[]);var b=s.b(s.a),f=function(t){return t.properties.infection/Math.max(1e5,t.properties.POP_EST)},p=Object(o.useMemo)((function(){return Math.max.apply(Math,Object(r.a)(n.features.map(f)))}),[n]);return b.domain([0,p]),Object(d.jsx)(u.a,{width:750,height:750,globeImageUrl:\"//unpkg.com/three-globe/example/img/earth-night.jpg\",backgroundImageUrl:\"//unpkg.com/three-globe/example/img/night-sky.png\",lineHoverPrecision:0,polygonsData:n.features.filter((function(t){return\"AQ\"!==t.properties.ISO_A2})),polygonAltitude:function(t){return t===y?.12:.06},polygonCapColor:function(t){return t===y?\"steelblue\":b(f(t))},polygonSideColor:function(){return\"rgba(0, 100, 0, 0.15)\"},polygonStrokeColor:function(){return\"#111\"},polygonLabel:function(t){var e=t.properties;return\"<Button>\\n          <b >\".concat(e.COUNTRY,\" (\").concat(e.ISO_A2,'):</b> <br />\\n          <i style=\"color:red;\">Infection: ').concat(e.infection,'</i><br/>\\n          <i style=\"color:black;\">Death: ').concat(e.death,'</i><br/>\\n          <i style=\"color:blue;\">Recovery: ').concat(e.recover,\"</i><br/>\\n          <i>Population: \").concat(e.POP_EST,\"</i>\\n        </Button>\")},onPolygonHover:j,polygonsTransitionDuration:300})};return Object(d.jsx)(\"div\",{children:Object(d.jsxs)(l.a,{style:{display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\"},children:[Object(d.jsxs)(l.a,{width:\"50vh\",children:[Object(d.jsx)(\"h3\",{children:\"Most Infection Country\"}),Object(d.jsxs)(y.a,{width:450,height:300,data:[{country:\"USA\",infection:32557444},{country:\"India\",infection:21077410},{country:\"Brazil\",infection:14930183},{country:\"France\",infection:5767541},{country:\"Turkey\",infection:4955594},{country:\"Russia\",infection:4792354},{country:\"UK\",infection:4441644},{country:\"Italy\",infection:4070400},{country:\"Spain\",infection:3551262},{country:\"Germany\",infection:3484755}],layout:\"vertical\",children:[Object(d.jsx)(j.a,{type:\"category\",dataKey:\"country\",fontSize:\"10\"}),Object(d.jsx)(b.a,{type:\"number\"}),Object(d.jsx)(f.a,{}),Object(d.jsx)(p.a,{}),Object(d.jsx)(h.a,{dataKey:\"infection\",fill:\"#ff0000\"})]}),Object(d.jsx)(\"h3\",{children:\"Most Vaccination Country\"}),Object(d.jsxs)(y.a,{width:450,height:300,data:[{country:\"China\",total_vaccine:36691e4},{country:\"USA\",total_vaccine:266596486},{country:\"India\",total_vaccine:178361846},{country:\"UK\",total_vaccine:54797640},{country:\"Brazil\",total_vaccine:50308106},{country:\"Germany\",total_vaccine:38646171},{country:\"France\",total_vaccine:27455748},{country:\"Italy\",total_vaccine:25948925},{country:\"Turkey\",total_vaccine:25402277},{country:\"Russia\",total_vaccine:22782931}],layout:\"vertical\",children:[Object(d.jsx)(j.a,{type:\"category\",dataKey:\"country\",fontSize:\"10\"}),Object(d.jsx)(b.a,{type:\"number\"}),Object(d.jsx)(f.a,{}),Object(d.jsx)(p.a,{}),Object(d.jsx)(h.a,{dataKey:\"total_vaccine\",fill:\"#8884d8\"})]})]}),Object(d.jsx)(t,{})]})})};a.a.render(Object(d.jsx)(O,{}),document.getElementById(\"root\"))}},[[428,1,2]]]);","name":"static/js/main.be8307e0.chunk.js","map":{"version":3,"sources":["static/js/main.be8307e0.chunk.js"],"names":["this","push","428","module","__webpack_exports__","__webpack_require__","r","react","react_dom","react_dom_default","n","toConsumableArray","slicedToArray","react_globe_gl_module","Box","d3","BarChart","YAxis","XAxis","Tooltip","Legend","Bar","jsx_runtime","src_App","World","_useState","Object","features","_useState2","countries","setCountries","_useState3","_useState4","hoverD","setHoverD","fetch","then","res","json","colorScale","getVal","feat","properties","infection","Math","max","POP_EST","maxVal","apply","map","domain","width","height","globeImageUrl","backgroundImageUrl","lineHoverPrecision","polygonsData","filter","d","ISO_A2","polygonAltitude","polygonCapColor","polygonSideColor","polygonStrokeColor","polygonLabel","_ref","concat","COUNTRY","death","recover","onPolygonHover","polygonsTransitionDuration","children","style","display","flexDirection","justifyContent","data","country","layout","type","dataKey","fontSize","fill","total_vaccine","a","render","document","getElementById"],"mappings":"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"},"input":"(this[\"webpackJsonpmoz-todo-react\"] = this[\"webpackJsonpmoz-todo-react\"] || []).push([[0],{\n\n/***/ 428:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(97);\nvar react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 3 modules\nvar toConsumableArray = __webpack_require__(47);\n\n// EXTERNAL MODULE: ./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules\nvar slicedToArray = __webpack_require__(22);\n\n// EXTERNAL MODULE: ./node_modules/react-globe.gl/dist/react-globe.gl.module.js + 262 modules\nvar react_globe_gl_module = __webpack_require__(228);\n\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Box/Box.js + 75 modules\nvar Box = __webpack_require__(445);\n\n// EXTERNAL MODULE: /Users/lechuanwang/node_modules/d3/index.js + 150 modules\nvar d3 = __webpack_require__(135);\n\n// EXTERNAL MODULE: ./node_modules/recharts/es6/chart/BarChart.js\nvar BarChart = __webpack_require__(443);\n\n// EXTERNAL MODULE: ./node_modules/recharts/es6/cartesian/YAxis.js\nvar YAxis = __webpack_require__(227);\n\n// EXTERNAL MODULE: ./node_modules/recharts/es6/cartesian/XAxis.js\nvar XAxis = __webpack_require__(226);\n\n// EXTERNAL MODULE: ./node_modules/recharts/es6/component/Tooltip.js + 1 modules\nvar Tooltip = __webpack_require__(83);\n\n// EXTERNAL MODULE: ./node_modules/recharts/es6/component/Legend.js + 11 modules\nvar Legend = __webpack_require__(80);\n\n// EXTERNAL MODULE: ./node_modules/recharts/es6/cartesian/Bar.js + 3 modules\nvar Bar = __webpack_require__(229);\n\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(25);\n\n// CONCATENATED MODULE: ./src/App.js\n//import GraphAll from './GraphAll';\nfunction App(){var vac_data=[{country:'China',total_vaccine:366910000},{country:'USA',total_vaccine:266596486.0},{country:'India',total_vaccine:178361846},{country:'UK',total_vaccine:54797640},{country:'Brazil',total_vaccine:50308106},{country:'Germany',total_vaccine:38646171},{country:'France',total_vaccine:27455748},{country:'Italy',total_vaccine:25948925},{country:'Turkey',total_vaccine:25402277},{country:'Russia',total_vaccine:22782931}];var infection_data=[{country:'USA',infection:32557444},{country:'India',infection:21077410},{country:'Brazil',infection:14930183},{country:'France',infection:5767541},{country:'Turkey',infection:4955594},{country:'Russia',infection:4792354},{country:'UK',infection:4441644},{country:'Italy',infection:4070400},{country:'Spain',infection:3551262},{country:'Germany',infection:3484755}];var World=function World(){var _useState=Object(react[\"useState\"])({features:[]}),_useState2=Object(slicedToArray[\"a\" /* default */])(_useState,2),countries=_useState2[0],setCountries=_useState2[1];var _useState3=Object(react[\"useState\"])(),_useState4=Object(slicedToArray[\"a\" /* default */])(_useState3,2),hoverD=_useState4[0],setHoverD=_useState4[1];Object(react[\"useEffect\"])(function(){// load data\nfetch('./covid.geojson').then(function(res){return res.json();}).then(setCountries);},[]);var colorScale=d3[\"b\" /* scaleSequentialSqrt */](d3[\"a\" /* interpolateYlOrRd */]);// GDP per capita (avoiding countries with small pop)\nvar getVal=function getVal(feat){return feat.properties.infection/Math.max(1e5,feat.properties.POP_EST);};var maxVal=Object(react[\"useMemo\"])(function(){return Math.max.apply(Math,Object(toConsumableArray[\"a\" /* default */])(countries.features.map(getVal)));},[countries]);colorScale.domain([0,maxVal]);return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(react_globe_gl_module[\"a\" /* default */],{width:750,height:750,globeImageUrl:\"//unpkg.com/three-globe/example/img/earth-night.jpg\",backgroundImageUrl:\"//unpkg.com/three-globe/example/img/night-sky.png\",lineHoverPrecision:0,polygonsData:countries.features.filter(function(d){return d.properties.ISO_A2!=='AQ';}),polygonAltitude:function polygonAltitude(d){return d===hoverD?0.12:0.06;},polygonCapColor:function polygonCapColor(d){return d===hoverD?'steelblue':colorScale(getVal(d));},polygonSideColor:function polygonSideColor(){return'rgba(0, 100, 0, 0.15)';},polygonStrokeColor:function polygonStrokeColor(){return'#111';},polygonLabel:function polygonLabel(_ref){var d=_ref.properties;return\"<Button>\\n          <b >\".concat(d.COUNTRY,\" (\").concat(d.ISO_A2,\"):</b> <br />\\n          <i style=\\\"color:red;\\\">Infection: \").concat(d.infection,\"</i><br/>\\n          <i style=\\\"color:black;\\\">Death: \").concat(d.death,\"</i><br/>\\n          <i style=\\\"color:blue;\\\">Recovery: \").concat(d.recover,\"</i><br/>\\n          <i>Population: \").concat(d.POP_EST,\"</i>\\n        </Button>\");},onPolygonHover:setHoverD,polygonsTransitionDuration:300});};return/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"div\",{children:/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(Box[\"a\" /* default */],{style:{display:'flex',flexDirection:'row',justifyContent:'space-between'},children:[/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(Box[\"a\" /* default */],{width:\"50vh\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"h3\",{children:\"Most Infection Country\"}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(BarChart[\"a\" /* BarChart */],{width:450,height:300,data:infection_data,layout:\"vertical\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(YAxis[\"a\" /* YAxis */],{type:\"category\",dataKey:\"country\",fontSize:\"10\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(XAxis[\"a\" /* XAxis */],{type:\"number\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(Tooltip[\"a\" /* Tooltip */],{}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(Legend[\"a\" /* Legend */],{}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(Bar[\"a\" /* Bar */],{dataKey:\"infection\",fill:\"#ff0000\"})]}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(\"h3\",{children:\"Most Vaccination Country\"}),/*#__PURE__*/Object(jsx_runtime[\"jsxs\"])(BarChart[\"a\" /* BarChart */],{width:450,height:300,data:vac_data,layout:\"vertical\",children:[/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(YAxis[\"a\" /* YAxis */],{type:\"category\",dataKey:\"country\",fontSize:\"10\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(XAxis[\"a\" /* XAxis */],{type:\"number\"}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(Tooltip[\"a\" /* Tooltip */],{}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(Legend[\"a\" /* Legend */],{}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(Bar[\"a\" /* Bar */],{dataKey:\"total_vaccine\",fill:\"#8884d8\"})]})]}),/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(World,{})]})});}/* harmony default export */ var src_App = (App);\n// CONCATENATED MODULE: ./src/index.js\nreact_dom_default.a.render(/*#__PURE__*/Object(jsx_runtime[\"jsx\"])(src_App,{}),document.getElementById('root'));\n\n/***/ })\n\n},[[428,1,2]]]);","inputSourceMap":{"version":3,"sources":["/Users/lechuanwang/Documents/2021 spring/dsc106/project/dsc102/102-project/src/App.js","/Users/lechuanwang/Documents/2021 spring/dsc106/project/dsc102/102-project/src/index.js"],"names":["App","vac_data","country","total_vaccine","infection_data","infection","World","useState","features","countries","setCountries","hoverD","setHoverD","useEffect","fetch","then","res","json","colorScale","d3","getVal","feat","properties","Math","max","POP_EST","maxVal","useMemo","map","domain","filter","d","ISO_A2","COUNTRY","death","recover","display","flexDirection","justifyContent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"x","sourcesContent":["import Globe from 'react-globe.gl';\nimport { useState, useEffect, useMemo, React } from 'react';\nimport { Box } from '@material-ui/core'\nimport * as d3 from 'd3';\n//import GraphAll from './GraphAll';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend } from 'recharts';\n\nfunction App() {\n  const vac_data = [{country: 'China', total_vaccine: 366910000},\n    {country: 'USA', total_vaccine: 266596486.0},\n    {country: 'India', total_vaccine: 178361846},\n    {country: 'UK', total_vaccine: 54797640},\n    {country: 'Brazil', total_vaccine: 50308106},\n    {country: 'Germany', total_vaccine: 38646171},\n    {country: 'France', total_vaccine: 27455748},\n    {country: 'Italy', total_vaccine: 25948925},\n    {country: 'Turkey', total_vaccine: 25402277},\n    {country: 'Russia', total_vaccine: 22782931}];\n  \n  const infection_data = [{country: 'USA', infection: 32557444},\n    {country: 'India', infection: 21077410},\n    {country: 'Brazil', infection: 14930183},\n    {country: 'France', infection: 5767541},\n    {country: 'Turkey', infection: 4955594},\n    {country: 'Russia', infection: 4792354},\n    {country: 'UK', infection: 4441644},\n    {country: 'Italy', infection: 4070400},\n    {country: 'Spain', infection: 3551262},\n    {country: 'Germany', infection: 3484755}];\n\n  const World = () => {\n    const [countries, setCountries] = useState({ features: []});\n    const [hoverD, setHoverD] = useState();\n\n    useEffect(() => {\n      // load data\n      fetch('./covid.geojson').then(res => res.json()).then(setCountries);\n    }, []);\n\n    const colorScale = d3.scaleSequentialSqrt(d3.interpolateYlOrRd);\n\n    // GDP per capita (avoiding countries with small pop)\n    const getVal = feat => feat.properties.infection / Math.max(1e5, feat.properties.POP_EST);\n\n    const maxVal = useMemo(\n      () => Math.max(...countries.features.map(getVal)),\n      [countries]\n    );\n    colorScale.domain([0, maxVal]);\n\n    return <Globe\n      width={750}\n      height={750}\n      globeImageUrl=\"//unpkg.com/three-globe/example/img/earth-night.jpg\"\n      backgroundImageUrl=\"//unpkg.com/three-globe/example/img/night-sky.png\"\n      lineHoverPrecision={0}\n\n      polygonsData={countries.features.filter(d => d.properties.ISO_A2 !== 'AQ')}\n      polygonAltitude={d => d === hoverD ? 0.12 : 0.06}\n      polygonCapColor={d => d === hoverD ? 'steelblue' : colorScale(getVal(d))}\n      polygonSideColor={() => 'rgba(0, 100, 0, 0.15)'}\n      polygonStrokeColor={() => '#111'}\n      polygonLabel={({ properties: d }) =>\n        `<Button>\n          <b >${d.COUNTRY} (${d.ISO_A2}):</b> <br />\n          <i style=\"color:red;\">Infection: ${d.infection}</i><br/>\n          <i style=\"color:black;\">Death: ${d.death}</i><br/>\n          <i style=\"color:blue;\">Recovery: ${d.recover}</i><br/>\n          <i>Population: ${d.POP_EST}</i>\n        </Button>`\n      }\n      onPolygonHover={setHoverD}\n      polygonsTransitionDuration={300}\n    />\n  };\n\n  return (\n    <div>\n      <Box style={{display:'flex', flexDirection:'row', justifyContent:'space-between'}}>\n        <Box width='50vh'>\n          <h3>Most Infection Country</h3>\n          <BarChart width={450} height={300} data={infection_data} layout='vertical'>\n              <YAxis type=\"category\" dataKey=\"country\" fontSize='10'/>\n              <XAxis type=\"number\"/>\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"infection\" fill=\"#ff0000\" />\n          </BarChart>\n          <h3>Most Vaccination Country</h3>\n          <BarChart width={450} height={300} data={vac_data} layout='vertical'>\n              <YAxis type=\"category\" dataKey=\"country\" fontSize='10'/>\n              <XAxis type=\"number\"/>\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"total_vaccine\" fill=\"#8884d8\" />\n          </BarChart>\n        </Box>\n        <World /> \n      </Box>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"]}}